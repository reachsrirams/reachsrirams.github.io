<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on Sriram S - Innervoice</title>
    <link>http://reachsrirams.github.io/blogs/categories/programming/</link>
    <description>Recent content in Programming on Sriram S - Innervoice</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 26 Nov 2017 05:15:30 +0000</lastBuildDate>
    
	<atom:link href="http://reachsrirams.github.io/blogs/categories/programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Docker Compose with nginx and NodeJS</title>
      <link>http://reachsrirams.github.io/blogs/2017/11/26/docker-compose-nginx-nodejs/</link>
      <pubDate>Sun, 26 Nov 2017 05:15:30 +0000</pubDate>
      
      <guid>http://reachsrirams.github.io/blogs/2017/11/26/docker-compose-nginx-nodejs/</guid>
      <description>&lt;p&gt;If you are a follower of this blog, you might have read about &lt;a href=&#34;http://www.innervoice.in/blogs/2017/11/19/using-docker-nginx-nodejs/&#34;&gt;Using Docker with nginx and NodeJS&lt;/a&gt;. In this blog, I will discuss the code to build  the two containers using Docker Compose. Finally, I will highlight an important capability of Docker that I learnt in this exercise. The source code being referred in this blog is &lt;a href=&#34;https://goo.gl/sBmSt3&#34;&gt;available on GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Using Docker with nginx and NodeJS</title>
      <link>http://reachsrirams.github.io/blogs/2017/11/19/using-docker-nginx-nodejs/</link>
      <pubDate>Sun, 19 Nov 2017 05:56:48 +0000</pubDate>
      
      <guid>http://reachsrirams.github.io/blogs/2017/11/19/using-docker-nginx-nodejs/</guid>
      <description>&lt;p&gt;The best way to learn a new technology is by doing some hands-on practice or exercise. In order to learn the basics of Docker, I was scouting for a problem and the one that captured my imagination was how to use Docker for handling static web pages and dynamic REST APIs. In this 2-part blog, I will describe the problem and the solution first and then show how I implemented the solution using Docker.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Newton release install scripts for OpenStack</title>
      <link>http://reachsrirams.github.io/blogs/2017/05/02/openstack-newton-install/</link>
      <pubDate>Tue, 02 May 2017 05:07:42 +0000</pubDate>
      
      <guid>http://reachsrirams.github.io/blogs/2017/05/02/openstack-newton-install/</guid>
      <description>Newton is one the recent releases of OpenStack. I would like to share scripts that can be used to install the Newton release of OpenStack on Ubuntu 16.04 as per the installation guide. As part of my blogging, book writing projects, I have the need to install OpenStack many times. And I have been automating the installation by writing simple shell scripts. The result is a collection of scripts that should help you get going with OpenStack&amp;rsquo;s latest release.</description>
    </item>
    
    <item>
      <title>OpenStack Horizon: extending the dashboard – Part 1</title>
      <link>http://reachsrirams.github.io/blogs/2016/12/27/openstack-horizon-customizing-the-dashboard/</link>
      <pubDate>Tue, 27 Dec 2016 10:31:44 +0000</pubDate>
      
      <guid>http://reachsrirams.github.io/blogs/2016/12/27/openstack-horizon-customizing-the-dashboard/</guid>
      <description>OpenStack Horizon is the project that provides the web based dashboard for OpenStack based clouds. In this 2-part blog I will show you how you can extend the dashboard. Customizing and extending is one of the most powerful capabilities in OpenStack and in private cloud environments it is common to add additional enhancements to address an organization&amp;#8217;s needs.
OpenStack Horizon Background Horizon is a Django based web application and is hosted using an Apache web server.</description>
    </item>
    
    <item>
      <title>PyCharm and OpenStack programming</title>
      <link>http://reachsrirams.github.io/blogs/2016/01/02/pycharm-and-openstack-programming/</link>
      <pubDate>Sat, 02 Jan 2016 17:43:51 +0000</pubDate>
      
      <guid>http://reachsrirams.github.io/blogs/2016/01/02/pycharm-and-openstack-programming/</guid>
      <description>OpenStack is based on the Python programming language and DevStack is the most common development and test environment for OpenStack. If you are doing serious, professional programming around OpenStack, it is very useful to have a proper development environment. In this blog, I will show you how to use the PyCharm IDE from Jetbrains for your OpenStack programming. I will use the Neutron ML2 driver code from my book OpenStack Networking Cookbook to guide you in setting up the PyCharm IDE.</description>
    </item>
    
    <item>
      <title>Using SL4J and SimpleLogger with Servlets</title>
      <link>http://reachsrirams.github.io/blogs/2013/11/18/using-slf4j-servlets/</link>
      <pubDate>Mon, 18 Nov 2013 16:07:04 +0000</pubDate>
      
      <guid>http://reachsrirams.github.io/blogs/2013/11/18/using-slf4j-servlets/</guid>
      <description>We saw in my previous blog that SLF4J and SimpleLogger support the most critical logging requirements with ease. In this blog, we will see how to use SLF4J in a Servlets based application.
The general practice is to initialize logging related objects and parameters at the startup of an application. In case of Servlets, any of the servlet in the Web Application can be invoked due to user action. So we need to use a different technique for initializing logging related objects.</description>
    </item>
    
    <item>
      <title>Log API Comparison – Java Logger vs SLF4J</title>
      <link>http://reachsrirams.github.io/blogs/2013/10/20/log-api-comparison-java-logger-vs-slf4j/</link>
      <pubDate>Sun, 20 Oct 2013 17:34:26 +0000</pubDate>
      
      <guid>http://reachsrirams.github.io/blogs/2013/10/20/log-api-comparison-java-logger-vs-slf4j/</guid>
      <description>&lt;p&gt;Log statements help record the flow of an application&amp;#8217;s execution. Hence they are an important part of software coding process. For the Java language the common Log API libraries are Java Util Logger (commonly known as JUL), Apache Log4J, SLF4J etc. While these libraries support many advanced capabilities, most developers only use a handful of features. For example, ability to send log messages to files and the ability change log levels dynamically etc.&lt;/p&gt;

&lt;p&gt;In this blog I will compare JUL against SLF4J and focus on these above mentioned features. Many will argue that this is not a fair comparison since SFL4J is really a facade and supports JUL as well. To clarify, I will compare the SimpleLogger that is bundled with SLF4J against direct JUL usage.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HTML5 Local Storage – 5 Useful Tips</title>
      <link>http://reachsrirams.github.io/blogs/2012/12/27/html5-local-storage-tips-and-tricks/</link>
      <pubDate>Thu, 27 Dec 2012 13:30:45 +0000</pubDate>
      
      <guid>http://reachsrirams.github.io/blogs/2012/12/27/html5-local-storage-tips-and-tricks/</guid>
      <description>&lt;p&gt;HTML5 Local Storage is a browser based &lt;em&gt;key-value database&lt;/em&gt; that is available for client side applications. Java programmers (like me) will find that  HTML5 Local Storage is very similar to HashMap (or Hashtable). It is important to remember that Local Storage is available to client side applications even across browser restarts. In that context, Local Storage is similar to cookies. &lt;strong&gt;But unlike cookies, Local Storage is not accessible to the server side applications. &lt;/strong&gt;Also cookies provide very limited storage (4 KB).&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HTML5 Local Storage based preferences for the URL Generator project</title>
      <link>http://reachsrirams.github.io/blogs/2012/12/24/html5-local-storage-url-generator-project/</link>
      <pubDate>Mon, 24 Dec 2012 16:45:58 +0000</pubDate>
      
      <guid>http://reachsrirams.github.io/blogs/2012/12/24/html5-local-storage-url-generator-project/</guid>
      <description>&lt;p&gt;The release 2 (R2) of my URL Generator Project is now ready. You can check it out at the &lt;a href=&#34;http://www.innervoice.in/tools/urlgen/&#34;&gt;usual location&lt;/a&gt;. I am happy to share that this revision was completed on time as per my &lt;a href=&#34;http://www.innervoice.in/blogs/2012/11/16/changes-to-my-url-generator-project-milestones/&#34;&gt;revised project plan&lt;/a&gt;. Of course the announcement was delayed a bit. The main additions to this version of the URL generator are HTML5 based Local Storage, a simple usage of Object-oriented JavaScript techniques and jQuery.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Changes to my URL Generator Project Milestones</title>
      <link>http://reachsrirams.github.io/blogs/2012/11/16/changes-to-my-url-generator-project-milestones/</link>
      <pubDate>Fri, 16 Nov 2012 15:48:38 +0000</pubDate>
      
      <guid>http://reachsrirams.github.io/blogs/2012/11/16/changes-to-my-url-generator-project-milestones/</guid>
      <description>&lt;p&gt;Today I want to announce some changes in the milestones and roadmap of my URL Generator Project.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>4 Important CSS Concepts I learnt</title>
      <link>http://reachsrirams.github.io/blogs/2012/11/14/4-important-css-concepts-i-learnt/</link>
      <pubDate>Wed, 14 Nov 2012 07:05:23 +0000</pubDate>
      
      <guid>http://reachsrirams.github.io/blogs/2012/11/14/4-important-css-concepts-i-learnt/</guid>
      <description>&lt;p&gt;As part of Release 1.0 of my URL Generator project, I learnt several important CSS concepts. Here is a summary of four of those concepts.

&lt;p lang=&#34;en-US&#34;&gt;
  &lt;span style=&#34;text-decoration: underline;&#34;&gt;&lt;strong&gt;CSS Box Model&lt;/strong&gt;&lt;/span&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Java 7: Catching and handling multiple Exceptions</title>
      <link>http://reachsrirams.github.io/blogs/2012/03/17/java-7-catching-and-handling-multiple-exceptions/</link>
      <pubDate>Sat, 17 Mar 2012 14:13:50 +0000</pubDate>
      
      <guid>http://reachsrirams.github.io/blogs/2012/03/17/java-7-catching-and-handling-multiple-exceptions/</guid>
      <description>&lt;p&gt;If you write networking or IO oriented programs using Java, there will be several situations where the code on the server will catch multiple exceptions. Most of the times the exceptions are logged, sometimes they are logged and re-thrown.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>