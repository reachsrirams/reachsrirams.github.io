<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Openstack on Sriram S - Innervoice</title>
    <link>http://reachsrirams.github.io/blogs/tags/openstack/</link>
    <description>Recent content in Openstack on Sriram S - Innervoice</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 03 Jun 2017 02:39:12 +0000</lastBuildDate>
    
	<atom:link href="http://reachsrirams.github.io/blogs/tags/openstack/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ocata release install scripts for OpenStack</title>
      <link>http://reachsrirams.github.io/blogs/2017/06/03/ocata-openstack-install/</link>
      <pubDate>Sat, 03 Jun 2017 02:39:12 +0000</pubDate>
      
      <guid>http://reachsrirams.github.io/blogs/2017/06/03/ocata-openstack-install/</guid>
      <description>Ocata is the most recent release of OpenStack. I would like to share scripts that can be used to install the Ocata is the most recent release of OpenStack. I would like to share scripts that can be used to install the server as per the installation guide. This is a collection of scripts that should help you get going with OpenStack&amp;#8217;s latest release. I have been developing these scripts to help me with my blogging and personal learning projects</description>
    </item>
    
    <item>
      <title>Newton release install scripts for OpenStack</title>
      <link>http://reachsrirams.github.io/blogs/2017/05/02/openstack-newton-install/</link>
      <pubDate>Tue, 02 May 2017 05:07:42 +0000</pubDate>
      
      <guid>http://reachsrirams.github.io/blogs/2017/05/02/openstack-newton-install/</guid>
      <description>Newton is one the recent releases of OpenStack. I would like to share scripts that can be used to install the Newton release of OpenStack on Ubuntu 16.04 as per the installation guide. As part of my blogging, book writing projects, I have the need to install OpenStack many times. And I have been automating the installation by writing simple shell scripts. The result is a collection of scripts that should help you get going with OpenStack&amp;#8217;s latest release.</description>
    </item>
    
    <item>
      <title>OpenStack Horizon: extending the dashboard – Part 2</title>
      <link>http://reachsrirams.github.io/blogs/2017/01/22/openstack-horizon-extending-dashboard-part-2/</link>
      <pubDate>Sun, 22 Jan 2017 17:42:35 +0000</pubDate>
      
      <guid>http://reachsrirams.github.io/blogs/2017/01/22/openstack-horizon-extending-dashboard-part-2/</guid>
      <description>In this second installment of my blog on OpenStack Horizon, I will take you through different source code files that make a custom OpenStack dashboard. As a recap from the first installment, I will show you how to create a custom dashboard to view all the Neutron &amp;#8220;ports&amp;#8221; in your OpenStack based cloud.
Enabling OpenStack Horizon Dashboard Django framework loads and enables dashboards based on entries present in the enabled directory of OpenStack Dashboard.</description>
    </item>
    
    <item>
      <title>OpenStack Horizon: extending the dashboard – Part 1</title>
      <link>http://reachsrirams.github.io/blogs/2016/12/27/openstack-horizon-customizing-the-dashboard/</link>
      <pubDate>Tue, 27 Dec 2016 10:31:44 +0000</pubDate>
      
      <guid>http://reachsrirams.github.io/blogs/2016/12/27/openstack-horizon-customizing-the-dashboard/</guid>
      <description>OpenStack Horizon is the project that provides the web based dashboard for OpenStack based clouds. In this 2-part blog I will show you how you can extend the dashboard. Customizing and extending is one of the most powerful capabilities in OpenStack and in private cloud environments it is common to add additional enhancements to address an organization&amp;#8217;s needs.
OpenStack Horizon Background Horizon is a Django based web application and is hosted using an Apache web server.</description>
    </item>
    
    <item>
      <title>Mitaka on Ubuntu – install scripts for OpenStack</title>
      <link>http://reachsrirams.github.io/blogs/2016/07/06/mitaka-on-ubuntu-install-scripts-for-openstack/</link>
      <pubDate>Wed, 06 Jul 2016 06:45:45 +0000</pubDate>
      
      <guid>http://reachsrirams.github.io/blogs/2016/07/06/mitaka-on-ubuntu-install-scripts-for-openstack/</guid>
      <description>Mitaka is the most recent release of OpenStack and currently it is supports Ubuntu 14.04 LTS (trusty). I would like to share scripts that can be used to install the Mitaka release of OpenStack on Ubuntu. As part of my blogging, book writing projects, I have had the need to install OpenStack many times. And I have been automating the installation by writing simple shell scripts. The result is a collection of scripts that should help you get going with OpenStack&amp;#8217;s latest release.</description>
    </item>
    
    <item>
      <title>OpenStack Controller Logs – view using a browser</title>
      <link>http://reachsrirams.github.io/blogs/2016/06/27/openstack-controller-logs-view-using-browser/</link>
      <pubDate>Mon, 27 Jun 2016 18:22:07 +0000</pubDate>
      
      <guid>http://reachsrirams.github.io/blogs/2016/06/27/openstack-controller-logs-view-using-browser/</guid>
      <description>OpenStack is made up of various services. These services have their own logs stored under /var/log directory. While working on OpenStack related projects it is quite common to monitor the logs for any problems or errors. While the tail command is the most popular, there are many benefits of using web browser to view the logs. In this blog let us see how we can view OpenStack Controller Logs using a browser.</description>
    </item>
    
    <item>
      <title>Goals for the first half of 2016</title>
      <link>http://reachsrirams.github.io/blogs/2016/02/01/goals-for-the-first-half-of-2016/</link>
      <pubDate>Mon, 01 Feb 2016 05:17:20 +0000</pubDate>
      
      <guid>http://reachsrirams.github.io/blogs/2016/02/01/goals-for-the-first-half-of-2016/</guid>
      <description>&lt;p&gt;I am late by a month in sharing my blogging and learning goals for the first half of 2016. Let&amp;rsquo;s start with a review of the second half of 2015.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Announcing: OpenStack Networking Cookbook</title>
      <link>http://reachsrirams.github.io/blogs/2015/10/23/openstack-networking-cookbook/</link>
      <pubDate>Fri, 23 Oct 2015 16:47:23 +0000</pubDate>
      
      <guid>http://reachsrirams.github.io/blogs/2015/10/23/openstack-networking-cookbook/</guid>
      <description>My first publication &amp;#8220;OpenStack Networking Cookbook&amp;#8221; is now available for purchase. It is available as a printed book as well as e-book. OpenStack is a rapidly evolving cloud platform and Networking (Neutron) is one of its critical components. The current trends of SDN and NFV make OpenStack Networking even more exciting and complex. I have co-authored the book with a colleague and the overall experience of writing a book was very satisfying.</description>
    </item>
    
    <item>
      <title>My goals for the second half of 2015</title>
      <link>http://reachsrirams.github.io/blogs/2015/07/05/my-goals-for-the-second-half-of-2015/</link>
      <pubDate>Sun, 05 Jul 2015 17:30:43 +0000</pubDate>
      
      <guid>http://reachsrirams.github.io/blogs/2015/07/05/my-goals-for-the-second-half-of-2015/</guid>
      <description>&lt;p&gt;As I have been doing for last few years, it is time to assess how well I have done on my blogging and learning goals. I will also share my goals for the second half of 2015.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ports in OpenStack Neutron</title>
      <link>http://reachsrirams.github.io/blogs/2015/07/04/ports-in-openstack-neutron/</link>
      <pubDate>Sat, 04 Jul 2015 18:55:10 +0000</pubDate>
      
      <guid>http://reachsrirams.github.io/blogs/2015/07/04/ports-in-openstack-neutron/</guid>
      <description>OpenStack supports rich abstractions to handle virtual networking needs in a cloud. As a user the most visible entities are the Network, Subnets, Routers, Firewall etc. But if we consider ingress and egress points for data traffic, the most critical entity is the Port. OpenStack Neutron Ports are usually created automatically as part of other user operations. However the CLI allows users to create Ports independently as well.
Why are Ports important?</description>
    </item>
    
    <item>
      <title>VirtualBox networking settings for OpenStack</title>
      <link>http://reachsrirams.github.io/blogs/2015/06/14/virtualbox-networking-settings-for-openstack/</link>
      <pubDate>Sun, 14 Jun 2015 14:58:44 +0000</pubDate>
      
      <guid>http://reachsrirams.github.io/blogs/2015/06/14/virtualbox-networking-settings-for-openstack/</guid>
      <description>The best way to learn OpenStack is by installing, running and playing with it directly. While most people use DevStack to accomplish this I prefer to setup a multi-node installation. This is important for me because much of my work related to OpenStack revolves around Networking. Another reason is that a multi-node installation is what real users of OpenStack will also be deploying.
In this blog, I will share the details of the VirtualBox based multi-node OpenStack installation.</description>
    </item>
    
    <item>
      <title>OpenStack Neutron Plugins and Agents</title>
      <link>http://reachsrirams.github.io/blogs/2015/03/31/openstack-neutron-plugins-and-agents/</link>
      <pubDate>Tue, 31 Mar 2015 16:55:40 +0000</pubDate>
      
      <guid>http://reachsrirams.github.io/blogs/2015/03/31/openstack-neutron-plugins-and-agents/</guid>
      <description>I briefly talked about OpenStack Neutron plugins and agents in my blog about OpenStack Neutron components. In this blog, let us go a step further and understand the roles of plugins and the agents.
OpenStack Neutron Plugins – why do we need them? Networking in OpenStack (for VM instances) is very similar to networking in the real world. VM instances require Layer 2 (L2) network connectivity minimally. Additionally instances may also require routing, firewall and load-balancing services.</description>
    </item>
    
    <item>
      <title>Using MAC table – Linux Bridge – WILT</title>
      <link>http://reachsrirams.github.io/blogs/2015/01/26/using-mac-table-linux-bridge-wilt/</link>
      <pubDate>Mon, 26 Jan 2015 16:19:23 +0000</pubDate>
      
      <guid>http://reachsrirams.github.io/blogs/2015/01/26/using-mac-table-linux-bridge-wilt/</guid>
      <description>&lt;p&gt;In an &lt;a href=&#34;http://www.innervoice.in/blogs/2013/12/02/linux-bridge-virtual-networking/&#34; title=&#34;Linux Bridge and Virtual Networking&#34;&gt;earlier blog&lt;/a&gt;, I have talked about Linux bridge based virtual networking. Recently as part of a comment on my blog, I learnt how to view and interpret the MAC table of Linux bridge. In this installment of WILT (What I Learnt Today) series, I will share how MAC Table can be used for troubleshooting Linux bridges.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux Network Namespace – WILT</title>
      <link>http://reachsrirams.github.io/blogs/2014/12/17/linux-network-namespace-wilt/</link>
      <pubDate>Wed, 17 Dec 2014 18:05:29 +0000</pubDate>
      
      <guid>http://reachsrirams.github.io/blogs/2014/12/17/linux-network-namespace-wilt/</guid>
      <description>&lt;p&gt;In the next installment of &amp;#8220;What I learnt today&amp;#8221; or WILT, I briefly touch upon Network Namespace. I came across Namespace as part of my ongoing study of OpenStack networking. Namespaces are powerful constructs in Linux that allows you to create a &lt;strong&gt;copy of the TCP/IP network stack &amp;#8211; all the way from the Ethernet interfaces (L2), routing tables etc.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Goals for the second half of 2014</title>
      <link>http://reachsrirams.github.io/blogs/2014/09/08/goals-second-half-2014/</link>
      <pubDate>Mon, 08 Sep 2014 07:48:13 +0000</pubDate>
      
      <guid>http://reachsrirams.github.io/blogs/2014/09/08/goals-second-half-2014/</guid>
      <description>&lt;p&gt;Here is my mid-year (I know I am off by couple of months) review of my blogging and learning goals for 2014. I will start off with my assessment of the first half of 2014 and then wrap with goals for the remaining four months of this year.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Goals for 2013</title>
      <link>http://reachsrirams.github.io/blogs/2013/01/01/goals-for-2013/</link>
      <pubDate>Tue, 01 Jan 2013 13:00:28 +0000</pubDate>
      
      <guid>http://reachsrirams.github.io/blogs/2013/01/01/goals-for-2013/</guid>
      <description>&lt;p&gt;Before I share my goals for the first half of 2013, here is an assessment of my 2012 goals. Around mid 2012, I had set out with some goals to learn a JavaScript, CSS and HTML5 as part of UTM URL Generator project. You can check out &lt;a href=&#34;http://www.innervoice.in/blogs/2012/06/29/how-i-am-learning-javascript-and-css/&#34;&gt;those goals here&lt;/a&gt;. Around November I reworked some of the &lt;a href=&#34;http://www.innervoice.in/blogs/2012/11/16/changes-to-my-url-generator-project-milestones/&#34; target=&#34;_blank&#34;&gt;milestones of that project&lt;/a&gt; and completed most of it recently. The main intention of the UTM URL Generator project was to learn the basics of few technologies.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Understanding Virtual Networks – Ports and VLAN</title>
      <link>http://reachsrirams.github.io/blogs/2012/08/30/understanding-virtual-networks-ports-and-vlan/</link>
      <pubDate>Thu, 30 Aug 2012 18:01:24 +0000</pubDate>
      
      <guid>http://reachsrirams.github.io/blogs/2012/08/30/understanding-virtual-networks-ports-and-vlan/</guid>
      <description>&lt;p&gt;In the &lt;a href=&#34;http://reachsrirams.github.io/blogs/blogs/2012/08/16/understanding-virtual-networks-the-basics/&#34;&gt;previous post&lt;/a&gt; we looked at the fundamental building blocks of physical and virtual networks. Now let us look at two key concepts in physical and virtual networks. They are Ports and VLAN.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Understanding Virtual Networks – The Basics</title>
      <link>http://reachsrirams.github.io/blogs/2012/08/16/understanding-virtual-networks-the-basics/</link>
      <pubDate>Thu, 16 Aug 2012 04:35:41 +0000</pubDate>
      
      <guid>http://reachsrirams.github.io/blogs/2012/08/16/understanding-virtual-networks-the-basics/</guid>
      <description>&lt;p&gt;In order understand Virtual Networking let us start with the simplest network that many of us operate every day – our home network. The picture below captures what a typical home network looks like. I am sure most of us use wireless rather than wired networks at home but the underlying concepts are very much alike.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Understanding Virtual Networks</title>
      <link>http://reachsrirams.github.io/blogs/2012/08/16/understanding-virtual-networks/</link>
      <pubDate>Thu, 16 Aug 2012 04:34:57 +0000</pubDate>
      
      <guid>http://reachsrirams.github.io/blogs/2012/08/16/understanding-virtual-networks/</guid>
      <description>&lt;p&gt;Upcoming technologies like OpenFlow and SDN are altering the networking landscape very quickly. The underlying drivers are Cloud Computing and Virtualization. Servers, Storage and Networking make up the trinity for effective Cloud computing strategy. Servers and Storage Virtualization has helped drive the adoption of flexible cloud services already. Now it is time for Network Virtualization.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>