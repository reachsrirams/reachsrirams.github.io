<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Router on Sriram S - Innervoice</title>
    <link>http://reachsrirams.github.io/blogs/tags/router/</link>
    <description>Recent content in Router on Sriram S - Innervoice</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 04 Jul 2015 18:55:10 +0000</lastBuildDate>
    
	<atom:link href="http://reachsrirams.github.io/blogs/tags/router/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ports in OpenStack Neutron</title>
      <link>http://reachsrirams.github.io/blogs/2015/07/04/ports-in-openstack-neutron/</link>
      <pubDate>Sat, 04 Jul 2015 18:55:10 +0000</pubDate>
      
      <guid>http://reachsrirams.github.io/blogs/2015/07/04/ports-in-openstack-neutron/</guid>
      <description>&lt;p&gt;OpenStack supports rich abstractions to handle &lt;a href=&#34;http://reachsrirams.github.io/blogs/blogs/2014/04/06/openstack-networking/&#34;&gt;virtual networking needs in a cloud&lt;/a&gt;. As a user the most visible entities are the Network, Subnets, Routers, Firewall etc. But if we consider ingress and egress points for data traffic, the most critical entity is the Port. OpenStack Neutron Ports are usually created automatically as part of other user operations. However the CLI allows users to create Ports independently as well.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Networking Concepts â€“ the fundamentals</title>
      <link>http://reachsrirams.github.io/blogs/2013/07/07/fundamental-networking-concepts/</link>
      <pubDate>Sun, 07 Jul 2013 09:02:53 +0000</pubDate>
      
      <guid>http://reachsrirams.github.io/blogs/2013/07/07/fundamental-networking-concepts/</guid>
      <description>&lt;p&gt;In my first YouTube video, I discuss 3 networking concepts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Default Gateway&lt;/li&gt;
&lt;li&gt;DNS Server&lt;/li&gt;
&lt;li&gt;Subnet Mask&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>